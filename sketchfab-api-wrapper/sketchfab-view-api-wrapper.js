(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@sketchfab/viewer-api"));
	else if(typeof define === 'function' && define.amd)
		define(["@sketchfab/viewer-api"], factory);
	else if(typeof exports === 'object')
		exports["sketchfabApiWrapper"] = factory(require("@sketchfab/viewer-api"));
	else
		root["sketchfabApiWrapper"] = factory(root["Sketchfab"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE__sketchfab_viewer_api__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/lodash.clone/index.js":
/*!********************************************!*\
  !*** ./node_modules/lodash.clone/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, module) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, false, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = clone;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack://sketchfabApiWrapper/./node_modules/lodash.clone/index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://sketchfabApiWrapper/(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack://sketchfabApiWrapper/(webpack)/buildin/module.js?");

/***/ }),

/***/ "./src/defaultOptions.config.js":
/*!**************************************!*\
  !*** ./src/defaultOptions.config.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  camera: 0,\n  autostart: 1,\n  autospin: 0,\n  // 0.1\n  preload: 1,\n  annotations_visible: 0,\n  animation_autoplay: 1,\n  ui_infos: 0,\n  ui_annotations: 0,\n  ui_controls: 0,\n  // ui_animations: 1,\n  ui_stop: 0,\n  ui_help: 0,\n  ui_hint: 0,\n  ui_watermark: 0,\n  transparent: 1,\n  scrollwheel: 1,\n  double_click: 1 // \"orbit_constraint_zoom_in\": 14,\n  // \"orbit_constraint_zoom_out\": 80,\n  // \"orbit_constraint_pitch_down\" : 0.0\n\n});\n\n//# sourceURL=webpack://sketchfabApiWrapper/./src/defaultOptions.config.js?");

/***/ }),

/***/ "./src/errors.js":
/*!***********************!*\
  !*** ./src/errors.js ***!
  \***********************/
/*! exports provided: NodeNotFoundError, CustomError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NodeNotFoundError\", function() { return NodeNotFoundError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CustomError\", function() { return CustomError; });\nclass NodeNotFoundError extends Error {}\nclass CustomError extends Error {}\n\n//# sourceURL=webpack://sketchfabApiWrapper/./src/errors.js?");

/***/ }),

/***/ "./src/imagBase64.helper.js":
/*!**********************************!*\
  !*** ./src/imagBase64.helper.js ***!
  \**********************************/
/*! exports provided: default, toDataUrl_async */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return toDataUrl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toDataUrl_async\", function() { return toDataUrl_async; });\nfunction toDataUrl(url, callback) {\n  var xhr = new XMLHttpRequest();\n\n  xhr.onload = function () {\n    var reader = new FileReader();\n\n    reader.onloadend = function () {\n      callback(reader.result);\n    };\n\n    reader.readAsDataURL(xhr.response);\n  };\n\n  xhr.open('GET', url);\n  xhr.responseType = 'blob';\n  xhr.send();\n}\n\nconst toDataUrl_async = url => {\n  return new Promise((res, rej) => {\n    var xhr = new XMLHttpRequest();\n\n    xhr.onload = function () {\n      var reader = new FileReader();\n\n      reader.onloadend = function () {\n        res(reader.result);\n      };\n\n      reader.readAsDataURL(xhr.response);\n    };\n\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n  });\n};\n\n\n\n//# sourceURL=webpack://sketchfabApiWrapper/./src/imagBase64.helper.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SketchfabViewApiWrapper; });\n/* harmony import */ var _sketchfab_viewer_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sketchfab/viewer-api */ \"@sketchfab/viewer-api\");\n/* harmony import */ var _sketchfab_viewer_api__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_sketchfab_viewer_api__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_clone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash.clone */ \"./node_modules/lodash.clone/index.js\");\n/* harmony import */ var lodash_clone__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_clone__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _imagBase64_helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./imagBase64.helper */ \"./src/imagBase64.helper.js\");\n/* harmony import */ var _utils_colors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/colors */ \"./src/utils/colors.js\");\n/* harmony import */ var _defaultOptions_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaultOptions.config */ \"./src/defaultOptions.config.js\");\n/* harmony import */ var _utils_hideNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/hideNode */ \"./src/utils/hideNode.js\");\n/* harmony import */ var _utils_showNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/showNode */ \"./src/utils/showNode.js\");\n/* harmony import */ var _utils_findNodeByName__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/findNodeByName */ \"./src/utils/findNodeByName.js\");\n\n\n\n\n\n\n\n\nclass SketchfabViewApiWrapper {\n  constructor(props) {\n    this.init = async () => {\n      const iframe = document.querySelector(this.iframeQuery);\n      const client = new _sketchfab_viewer_api__WEBPACK_IMPORTED_MODULE_0___default.a(this.version, iframe);\n      const {\n        autostart = 0\n      } = this.options;\n      return new Promise((resolve, reject) => client.init(this.uid, {\n        success: async api => {\n          this.api = api;\n          Object.assign(this, api);\n          api.start();\n          api.addEventListener('viewerready', async () => await this._initPromises().then(results => {\n            this._loadTextures().then(() => {\n              resolve({ ...this,\n                ...api\n              });\n            });\n          }).catch(error => {\n            console.error('Failed to init Api Wrapper', error);\n            reject(null);\n          }));\n        },\n        error: function onError() {\n          console.log('Viewer error');\n        },\n        ...this.options\n      }));\n    };\n\n    this._initPromises = async () => {\n      const promises = [this._preloadTexturesByUrl(), this._loadMaterials(), this._loadAnnotations(), this._loadAnimations(), this._loadNodes(), this._setupCameraRotation()];\n      return Promise.all(promises).then(results => {\n        this._setupMaterialsSwapping();\n\n        return results;\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n\n    this._preloadTexturesByUrl = async () => {\n      return new Promise(function (resolve, reject) {\n        if (this.texturesPreloadUrls) {\n          const promisesList = [];\n          this.texturesPreloadUrls.forEach(imageUrl => {\n            promisesList.push(Object(_imagBase64_helper__WEBPACK_IMPORTED_MODULE_2__[\"toDataUrl_async\"])(imageUrl).then(base64 => this._addTexture(base64)).then(tid => ({\n              url: imageUrl,\n              tid\n            })));\n          });\n          return resolve(Promise.all(promisesList).then(data => {\n            this.cashedTextures = data;\n          }));\n        } else {\n          resolve();\n        }\n      }.bind(this));\n    };\n\n    this._loadAnnotations = async () => {\n      return new Promise(function (resolve, reject) {\n        this.api.getAnnotationList((err, list) => {\n          this.annotations = list;\n\n          if (err) {\n            return reject(err);\n          }\n\n          resolve(list);\n        });\n      }.bind(this));\n    };\n\n    this._loadAnimations = async () => {\n      return new Promise(function (resolve, reject) {\n        this.api.getAnimations((err, list) => {\n          this.animations = list;\n\n          if (err) {\n            return reject(err);\n          }\n\n          return resolve(list);\n        });\n      }.bind(this));\n    };\n\n    this._loadNodes = async () => {\n      return new Promise((resolve, reject) => {\n        this.api.getNodeMap((err, nodes) => {\n          if (err) {\n            return reject(err);\n          }\n\n          this.nodes = nodes; // Готов список с именами объектов и ID - нужно для вкл/выкл по имени меша\n\n          let index = [];\n          Object.keys(nodes).forEach(n => {\n            let el = nodes[n];\n\n            if (typeof index[el.name] == 'object') {\n              index[el.name].push(el.instanceID);\n            } else {\n              index[el.name] = [el.instanceID];\n            }\n          });\n          this.nodes_index = index;\n          resolve(index);\n        });\n      });\n    };\n\n    this._loadMaterials = async () => {\n      if (!this.api) {\n        Promise.reject('getMaterialList: API not ready');\n      }\n\n      return new Promise(function (resolve, reject) {\n        this.api.getMaterialList((err, materials) => {\n          if (err) {\n            console.error(err);\n            return reject(err);\n          }\n\n          this.materials = materials;\n          return resolve(materials);\n        });\n      }.bind(this));\n    };\n\n    this._loadTextures = async () => {\n      if (!this.api) {\n        Promise.reject('getTextureList: API not ready');\n      }\n\n      return new Promise(function (resolve, reject) {\n        this.api.getTextureList((err, list) => {\n          this.textures = list;\n\n          if (err) {\n            console.error(err);\n            return reject(err);\n          }\n\n          return resolve(list);\n        });\n      }.bind(this));\n    };\n\n    this._setupCameraRotation = async () => {\n      if (!this.api) {\n        Promise.reject('getCameraLookAt: API not ready');\n      }\n\n      return new Promise(function (resolve, reject) {\n        this.api.getCameraLookAt((err, camera) => {\n          this.pov = camera.position; // Camera's point of view\n\n          this.tp = camera.target; // Target point of camera's view\n          // Calculate inital angle and radius to start rotation\n          // from the initial positon responding to target point\n\n          this.radius = Math.sqrt(Math.pow(this.pov[0] - this.tp[0], 2) + Math.pow(this.pov[1] - this.tp[1], 2) + Math.pow(this.pov[2] - this.tp[2], 2));\n          this.angle = Math.acos(this.pov[0] / this.radius) * 180 / Math.PI;\n          resolve({\n            radius: this.radius,\n            angle: this.angle\n          });\n        });\n      }.bind(this));\n    };\n\n    this._setupMaterialsSwapping = async () => {\n      if (!(this.api && this.materials)) {\n        return Promise.reject('API not ready');\n      }\n\n      const orderedNames = [...Array(this.materialMaxSources)].map((_, i) => `${this.materialPrefixSourceToSwap}_${('0' + (i + 1)).slice(-2)}`);\n      return new Promise(function (resolve, reject) {\n        this.materialNamesToSwap = this.materialNamesToSwap || this.materials.map(m => m.name).filter(n => orderedNames.includes(n)).sort((n, m) => n < m);\n        resolve(this.materialNamesToSwap);\n      }.bind(this));\n    };\n\n    this._setMaterialColor = (materialName, hexColor) => {\n      let material = this._getMaterialByName(materialName);\n\n      const linearColor = Object(_utils_colors__WEBPACK_IMPORTED_MODULE_3__[\"hexToLiner\"])(hexColor);\n      material.channels.AlbedoPBR.color = linearColor;\n      material.channels.DiffusePBR.color = linearColor;\n      material.channels.DiffuseColor.color = linearColor;\n      material.channels.AlbedoPBR.texture = undefined;\n      material.channels.DiffusePBR.texture = undefined;\n      material.channels.DiffuseColor.texture = undefined;\n      this.api.setMaterial(material, function (err, result) {\n        if (err) {\n          console.error(err);\n        }\n      });\n    };\n\n    this._setMaterialTexture = (materialName, tid, texCoordUnit) => {\n      let material = this._getMaterialByName(materialName);\n\n      material.channels.AlbedoPBR.texture = { ...(material.channels.AlbedoPBR.texture || {}),\n        uid: tid\n      };\n\n      if (texCoordUnit) {\n        material.channels.NormalMap.texture.texCoordUnit = texCoordUnit;\n        material.channels.CavityPBR.texture.texCoordUnit = texCoordUnit;\n        material.channels.AlbedoPBR.texture.texCoordUnit = texCoordUnit;\n      }\n\n      this.api.setMaterial(material, function (err, result) {\n        if (err) {\n          console.error(err);\n        }\n      });\n    };\n\n    this._setMaterialChannelTexture = (materialName, tid, texCoordUnit, channel = 'AlbedoPBR') => {\n      let material = this._getMaterialByName(materialName);\n\n      material.channels[channel].texture = { ...(material.channels[channel].texture || {}),\n        uid: tid\n      };\n\n      if (texCoordUnit) {\n        material.channels.NormalMap.texture.texCoordUnit = texCoordUnit;\n        material.channels.CavityPBR.texture.texCoordUnit = texCoordUnit;\n        material.channels.AlbedoPBR.texture.texCoordUnit = texCoordUnit;\n      }\n\n      this.api.setMaterial(material, function (err, result) {\n        if (err) {\n          console.error(err);\n        }\n      });\n    };\n\n    this._addTexture = url => {\n      return new Promise(function (resolve, reject) {\n        this.api.addTexture(url, function (err, textureUid) {\n          if (err) {\n            return reject(err);\n          }\n\n          return resolve(textureUid);\n        });\n      }.bind(this));\n    };\n\n    this._getMaterialByName = (materialName, context) => {\n      context = context || this.materials;\n      return context.reduce(function (acc, cur) {\n        if (cur.name === materialName) {\n          return cur;\n        }\n\n        return acc;\n      }, null);\n    };\n\n    this._getAnnotationByName = name => {\n      if (!this.annotations) {\n        return null;\n      }\n\n      let obj = null;\n      this.annotations.forEach(function (item, i) {\n        if (item.name === name) {\n          item.index = i;\n          obj = item;\n        }\n      });\n      return obj;\n    };\n\n    this._getAnimationByName = name => {\n      if (!this.animations) {\n        return null;\n      }\n\n      let obj = null;\n      this.animations.forEach(function (item, i) {\n        if (item[1] === name) {\n          // item.index = i;\n          obj = item;\n        }\n      });\n      return obj;\n    };\n\n    this._highlightNode = (node, color) => {\n      const y = node.material;\n      y.channels.EmitColor.factor = 1;\n      y.channels.EmitColor.enable = true;\n      y.channels.EmitColor.color = color;\n      this.api.setMaterial(y);\n    };\n\n    this._unhighlightNode = (node, color) => {\n      const y = node.material;\n      y.channels.EmitColor.factor = 1;\n      y.channels.EmitColor.enable = false;\n      y.channels.EmitColor.color = color;\n      this.api.setMaterial(y);\n    };\n\n    this.startHiglightNodeOnHover = (linearColor = [0.1, 0.1, 0.3]) => {\n      this.api.addEventListener('nodeMouseEnter', info => this._highlightNode(info, linearColor), {\n        pick: 'fast'\n      });\n      this.api.addEventListener('nodeMouseLeave', info => this._unhighlightNode(info, linearColor), {\n        pick: 'fast'\n      });\n    };\n\n    this.stopHiglightNodeOnHover = (linearColor = [0.1, 0.1, 0.3]) => {\n      this.api.removeEventListener('nodeMouseEnter', info => this._highlightNode(info, linearColor), {\n        pick: 'fast'\n      });\n      this.api.removeEventListener('nodeMouseLeave', info => this._unhighlightNode(info, linearColor), {\n        pick: 'fast'\n      });\n    };\n\n    this.setTextures = ({\n      pairs = [],\n      target,\n      domain = window.location.origin,\n      assets_dir = '',\n      useBase64 = true,\n      texCoordUnit\n    }) => {\n      let tid = false;\n      pairs.forEach(p => {\n        const {\n          channel,\n          url\n        } = p;\n        const imageUrl = domain + assets_dir + url;\n\n        if (this.cashedTextures && !!this.cashedTextures.filter(ct => ct.url === imageUrl).length) {\n          const tid = this.cashedTextures.filter(ct => ct.url === imageUrl)[0].tid;\n\n          if (tid) {\n            return this._setMaterialChannelTexture(target, tid, texCoordUnit, channel);\n          }\n        } else {\n          if (useBase64) {\n            Object(_imagBase64_helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(imageUrl, base64 => {\n              this._addTexture(base64).then(result => {\n                tid = result;\n\n                if (tid) {\n                  this._setMaterialChannelTexture(target, tid, texCoordUnit, channel);\n                }\n              });\n            });\n          } else {\n            this._addTexture(imageUrl).then(result => {\n              tid = result;\n\n              if (tid) {\n                this._setMaterialChannelTexture(target, tid, texCoordUnit, channel);\n              }\n            });\n          }\n        }\n      });\n    };\n\n    this.setTexture = ({\n      url,\n      target,\n      domain = window.location.origin,\n      assets_dir = '',\n      useBase64 = true,\n      texCoordUnit\n    }) => {\n      let tid = false;\n      const imageUrl = domain + assets_dir + url;\n\n      if (this.cashedTextures && !!this.cashedTextures.filter(ct => ct.url === imageUrl).length) {\n        const tid = this.cashedTextures.filter(ct => ct.url === imageUrl)[0].tid;\n\n        if (tid) {\n          return this._setMaterialTexture(target, tid, texCoordUnit);\n        }\n      } else {\n        if (useBase64) {\n          return Object(_imagBase64_helper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(imageUrl, base64 => this._addTexture(base64).then(result => {\n            tid = result;\n\n            if (tid) {\n              this._setMaterialTexture(target, tid, texCoordUnit);\n            }\n          }));\n        }\n\n        return this._addTexture(imageUrl).then(result => {\n          tid = result;\n\n          if (tid) {\n            this._setMaterialTexture(target, tid, texCoordUnit);\n          }\n        });\n      }\n    };\n\n    this.swapMaterial = ({\n      source,\n      target\n    }) => {\n      // Всегда храним копию оригинальных материалов\n      this.materials_target = this.materials_target || [...this.materials];\n\n      const targetMaterial = this._getMaterialByName(target);\n\n      const sourceMaterial = this._getMaterialByName(source, this.materials_target); // targetMaterial.channels = {...sourceMaterial.channels};\n\n\n      targetMaterial.channels = lodash_clone__WEBPACK_IMPORTED_MODULE_1___default()(sourceMaterial.channels, true); // console.warn(targetMaterial);\n\n      this.api.setMaterial(targetMaterial, function (err, result) {\n        if (err) {\n          console.error(err);\n        }\n      });\n    };\n\n    this.node_hide = name => Object(_utils_hideNode__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, name);\n\n    this.node_show = name => Object(_utils_showNode__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, name);\n\n    this.hideNode = name => Object(_utils_hideNode__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this, name);\n\n    this.showNode = name => Object(_utils_showNode__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this, name);\n\n    this.extendAnnotations = params => {\n      this.api.addEventListener('annotationFocus', index => {\n        console.log('Reached annotation ' + index);\n        let annot = this.annotations[index];\n        let prop = params[annot.name] || false;\n        console.warn(annot.name);\n\n        if (prop && typeof prop.onStart !== 'undefined') {\n          console.warn('ANIMATION ' + prop.onStart.animation);\n\n          let anim = this._getAnimationByName(prop.onStart.animation);\n\n          console.warn([prop, anim]);\n          this.api.setCurrentAnimationByUID(anim[0]);\n          this.api.seekTo(0);\n          this.api.setCycleMode(prop.onStart.cycle);\n          this.api.setSpeed(1);\n          this.api.play();\n        }\n      });\n      this.api.addEventListener('annotationBlur', index => {\n        console.log('Left annotation ' + index);\n        this.api.pause();\n      });\n    };\n\n    this.goToNextAnnotation = (filterByString = '', doSort = false) => {\n      const getInt = name => parseInt((name.match(/\\d+/) || [])[0]);\n\n      let annotations = this.annotations.filter(a => a.name.includes(filterByString));\n\n      if (doSort) {\n        annotations = annotations.sort((a, b) => getInt(a.name) > getInt(b.name) ? 1 : getInt(b.name) > getInt(a.name) ? -1 : 0);\n      }\n\n      const len = annotations.length;\n      this.currentAnnot++;\n      if (this.currentAnnot > len - 1) this.currentAnnot = 0;\n      const initialIndex = this.annotations.map(e => e.name).indexOf(annotations[this.currentAnnot].name);\n      this.api.gotoAnnotation(initialIndex);\n    };\n\n    this.goToPrevAnnotation = (filterByString = '', doSort = false) => {\n      const getInt = name => parseInt((name.match(/\\d+/) || [])[0]);\n\n      let annotations = this.annotations.filter(a => a.name.includes(filterByString));\n\n      if (doSort) {\n        annotations = annotations.sort((a, b) => getInt(a.name) > getInt(b.name) ? 1 : getInt(b.name) > getInt(a.name) ? -1 : 0);\n      }\n\n      const len = annotations.length;\n      this.currentAnnot--;\n      if (this.currentAnnot < 0) this.currentAnnot = len - 1;\n      const initialIndex = this.annotations.map(e => e.name).indexOf(annotations[this.currentAnnot].name);\n      this.api.gotoAnnotation(initialIndex);\n    };\n\n    this.setColor = ({\n      material,\n      hexColor\n    }) => {\n      console.warn([material, hexColor]);\n\n      if (!Array.isArray(material)) {\n        material = [material];\n      }\n\n      material.forEach(mat => {\n        this._setMaterialColor(mat, hexColor);\n      });\n    };\n\n    this.moveCameraOnDeg = ({\n      degree = this.degree,\n      tp = this.tp,\n      radius = this.radius,\n      duration = this.cameraEaseDuration\n    }) => {\n      const rads = degree * Math.PI / 180;\n      this.api.lookat([tp[0] + radius * Math.cos(rads), tp[1] + radius * Math.sin(rads), tp[2]], tp, duration);\n    };\n\n    this.startRotationLeft = (cb = () => {}) => {\n      if (this.api) {\n        this.stopAutoRotation(); // If auto rotate is active - stop it\n\n        this.rotateLeftInterval = setInterval(() => {\n          this.angle += this.rotationDegreeInterval;\n          this.moveCameraOnDeg({\n            pov: this.pov,\n            tp: this.tp,\n            radius: this.radius,\n            degree: this.angle,\n            duration: this.cameraEaseDuration\n          });\n        }, this.rotationTimeInterval);\n        cb();\n      }\n    };\n\n    this.stopRotationLeft = (cb = () => {}) => {\n      if (this.rotateLeftInterval) clearInterval(this.rotateLeftInterval);\n      cb();\n    };\n\n    this.startRotationRight = (cb = () => {}) => {\n      if (this.api) {\n        this.stopAutoRotation();\n        this.rotateRightInterval = setInterval(() => {\n          this.angle -= this.rotationDegreeInterval;\n          this.moveCameraOnDeg({\n            pov: this.pov,\n            tp: this.tp,\n            radius: this.radius,\n            degree: this.angle,\n            duration: this.cameraEaseDuration\n          });\n        }, this.rotationTimeInterval);\n        cb();\n      }\n    };\n\n    this.stopRotationRight = (cb = () => {}) => {\n      if (this.rotateRightInterval) clearInterval(this.rotateRightInterval);\n      cb();\n    };\n\n    this.startAutoRotation = (cb = () => {}) => {\n      if (this.api) {\n        let up = true;\n        this.rotateAutoInterval = setInterval(() => {\n          if (up) {\n            if (this.angle < 180) {\n              this.angle += this.rotationDegreeInterval;\n            } else if (this.angle >= 180) {\n              up = false;\n              this.angle -= this.rotationDegreeInterval;\n            }\n          } else {\n            if (this.angle > -180) {\n              this.angle -= this.rotationDegreeInterval;\n            } else if (this.angle <= -180) {\n              up = true;\n              this.angle += this.rotationDegreeInterval;\n            }\n          }\n\n          this.moveCameraOnDeg({\n            pov: this.pov,\n            tp: this.tp,\n            radius: this.radius,\n            degree: this.angle,\n            duration: this.cameraEaseDuration\n          });\n        }, this.rotationTimeInterval);\n        cb();\n      }\n    };\n\n    this.stopAutoRotation = (cb = () => {}) => {\n      if (this.rotateAutoInterval) {\n        clearInterval(this.rotateAutoInterval);\n      }\n\n      cb();\n    };\n\n    this.startAutoSwapping = (cb = () => {}) => {\n      if (this.api) {\n        if (!this.materialIndex) this.materialIndex = 0;\n        this.autoSwapInterval = setInterval(() => {\n          this.swapMaterial({\n            source: this.materialNamesToSwap[this.materialIndex],\n            target: this.materialTargetToSwap\n          });\n          this.materialIndex++;\n\n          if (this.materialIndex >= this.materialNamesToSwap.length) {\n            this.materialIndex = 0;\n          }\n        }, this.materialSwapTimeInterval);\n        cb();\n      }\n    };\n\n    this.stopAutoSwapping = (cb = () => {}) => {\n      if (this.autoSwapInterval) {\n        clearInterval(this.autoSwapInterval);\n      }\n\n      cb();\n    };\n\n    this.findNodeByName = nodeName => Object(_utils_findNodeByName__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(this, nodeName);\n\n    const {\n      useSingleton = true,\n      version = '1.5.1',\n      iframeQuery = '#api-frame',\n      uid = null,\n      options = _defaultOptions_config__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n      rotationDegreeInterval = 6,\n      rotationTimeInterval = 100,\n      cameraEaseDuration = 2,\n      materialNamesToSwap = null,\n      // Predefined list of source materials\n      materialTargetToSwap = 'surface_01',\n      // HARDCODED, must be re-thought\n      materialPrefixSourceToSwap = 'mat',\n      // HARDCODED, must be re-thought. mat_01, mat_02 ...\n      materialMaxSources = 6,\n      // HARDCODED, must be re-thought. Will select only first 6 sources mat_01-mat_06\n      materialSwapTimeInterval = 1000,\n      texturesPreloadUrls = null\n    } = props; // Singleton pattern\n\n    if (useSingleton && SketchfabViewApiWrapper._instance) return SketchfabViewApiWrapper._instance;\n    this.version = version;\n    this.iframeQuery = iframeQuery;\n    this.uid = uid;\n    this.options = options;\n    this.texturesPreloadUrls = texturesPreloadUrls; //- Params for camera rotation feature\n\n    this.rotationDegreeInterval = rotationDegreeInterval;\n    this.tp = 0;\n    this.pov = 0;\n    this.angle = 0;\n    this.radius = null;\n    this.rotationTimeInterval = rotationTimeInterval; // ms\n\n    this.cameraEaseDuration = cameraEaseDuration; // seconds\n    //-\n    //- Params for materials swap feature\n\n    this.materialTargetToSwap = materialTargetToSwap;\n    this.materialPrefixSourceToSwap = materialPrefixSourceToSwap;\n    this.materialMaxSources = materialMaxSources;\n    this.materialNamesToSwap = materialNamesToSwap; // Actually will be replaced during initialization\n\n    this.materialSwapTimeInterval = materialSwapTimeInterval; // ms\n    //-\n\n    this.api = null;\n    this.nodes = false;\n    this.nodes_index = false;\n    this.materials = false;\n    this.textures = false;\n    this.annotations = false;\n    this.animations = false;\n    this.currentAnnot = 1; // helpers\n\n    this.hexToLiner = _utils_colors__WEBPACK_IMPORTED_MODULE_3__[\"hexToLiner\"];\n    SketchfabViewApiWrapper._instance = this;\n  }\n\n  get instance() {\n    return SketchfabViewApiWrapper._instance;\n  }\n\n}\n\n//# sourceURL=webpack://sketchfabApiWrapper/./src/index.js?");

/***/ }),

/***/ "./src/utils/colors.js":
/*!*****************************!*\
  !*** ./src/utils/colors.js ***!
  \*****************************/
/*! exports provided: hexToLiner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexToLiner\", function() { return hexToLiner; });\nconst GAMMA = 2.4;\n\nfunction srgbToLinear1(c) {\n  var v = 0.0;\n\n  if (c < 0.04045) {\n    if (c >= 0.0) v = c * (1.0 / 12.92);\n  } else {\n    v = Math.pow((c + 0.055) * (1.0 / 1.055), GAMMA);\n  }\n\n  return v;\n}\n\nfunction srgbToLinear(c, out) {\n  var col = out || new Array(c.length);\n\n  if (c.length > 2 && c.length < 5) {\n    col[0] = srgbToLinear1(c[0]);\n    col[1] = srgbToLinear1(c[1]);\n    col[2] = srgbToLinear1(c[2]);\n    if (col.length > 3 && c.length > 3) col[3] = c[3];\n  } else {\n    throw new Error('Invalid color. Expected 3 or 4 components, but got ' + c.length);\n  }\n\n  return col;\n}\n\nfunction hexToRgb(hexColor) {\n  var m = hexColor.match(/^#([0-9a-f]{6})$/i);\n\n  if (m) {\n    return [parseInt(m[1].substr(0, 2), 16) / 255, parseInt(m[1].substr(2, 2), 16) / 255, parseInt(m[1].substr(4, 2), 16) / 255];\n  } else {\n    throw new Error('Invalid color: ' + hexColor);\n  }\n}\n\nconst hexToLiner = hex => srgbToLinear(hexToRgb(hex));\n\n//# sourceURL=webpack://sketchfabApiWrapper/./src/utils/colors.js?");

/***/ }),

/***/ "./src/utils/findNodeByName.js":
/*!*************************************!*\
  !*** ./src/utils/findNodeByName.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ((api, nodeName) => {\n  const nodeList = Object.values(api.nodes);\n  const node = nodeList.find(({\n    name\n  }) => name === nodeName);\n  return node;\n});\n\n//# sourceURL=webpack://sketchfabApiWrapper/./src/utils/findNodeByName.js?");

/***/ }),

/***/ "./src/utils/hideNode.js":
/*!*******************************!*\
  !*** ./src/utils/hideNode.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors */ \"./src/errors.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ((wrapper, name) => {\n  if (!wrapper.nodes_index[name]) {\n    throw new _errors__WEBPACK_IMPORTED_MODULE_0__[\"NodeNotFoundError\"](`Node with name \"${name}\" does not exist`);\n  }\n\n  wrapper.nodes_index[name].forEach(id => {\n    wrapper.api.hide(id);\n  });\n});\n\n//# sourceURL=webpack://sketchfabApiWrapper/./src/utils/hideNode.js?");

/***/ }),

/***/ "./src/utils/showNode.js":
/*!*******************************!*\
  !*** ./src/utils/showNode.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors */ \"./src/errors.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ((wrapper, name) => {\n  if (!wrapper.nodes_index[name]) {\n    throw new _errors__WEBPACK_IMPORTED_MODULE_0__[\"NodeNotFoundError\"](`Node with name \"${name}\" does not exist`);\n  }\n\n  wrapper.nodes_index[name].forEach(id => {\n    wrapper.api.show(id);\n  });\n});\n\n//# sourceURL=webpack://sketchfabApiWrapper/./src/utils/showNode.js?");

/***/ }),

/***/ "@sketchfab/viewer-api":
/*!******************************************************************************************************************************************!*\
  !*** external {"commonjs":"@sketchfab/viewer-api","commonjs2":"@sketchfab/viewer-api","amd":"@sketchfab/viewer-api","root":"Sketchfab"} ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE__sketchfab_viewer_api__;\n\n//# sourceURL=webpack://sketchfabApiWrapper/external_%7B%22commonjs%22:%22@sketchfab/viewer-api%22,%22commonjs2%22:%22@sketchfab/viewer-api%22,%22amd%22:%22@sketchfab/viewer-api%22,%22root%22:%22Sketchfab%22%7D?");

/***/ })

/******/ });
});